
f = (1+1)+1;

f = 1+(1+1);

f x = a (b c);

f x = a b c;

f x = (a b) c;

f x = 1 2 3;

f x = a b c d;

f x = (a b) c d;

f x = ((a b) c) d;

f x = (((a b) c) d);

f x = a b (c d);

f x = a (b (c d));

f x = (a (b (c d)));

f x = a (b c) d;

f x = 1 (2 3) 4;

f x = 1 2 (3 4);

f = Pack {1,2} (x + 3);


f x y = (x + y) > (p * (length xs));


g x y = (x + (x*y))/z > 10 & z;


p = 1 >= 3 & 7 == 2;


--j = 1 + 2 + 3 - 4 + 5;


f x = (case x of { <1> -> 1 }) + 2;

f x = 1 + (case x of { <1> -> 1 });

h x = case x of {
       <1> -> case y of {
               <10> x y -> ((x + (x*y))/z > 10 & z); 
               <11> -> 4
              };
       <2> -> 5
      };
      

f x = let { x = 2; z=1+2 } in 3 ; 

g x = \x . 3
